name: Lint

on: workflow_call

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install native dependencies
        run: sudo apt-get update && sudo apt-get install -y libldap2-dev libsasl2-dev heimdal-dev

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.5.29"
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"

      - name: Install the project
        run: uv sync --group dev

      - name: Run pre-commit hooks
        run: SKIP=ruff-lint uv run pre-commit run --all-files

      # Run `ruff` using github formatting to enable automatic inline annotations.
      - name: Run ruff
        run: "uv run ruff check --output-format=github ."

  artifact:
    name: Generate & upload pull request artifacts
    if: always() && github.event_name == 'pull_request'
    needs: lint
    runs-on: ubuntu-latest
    steps:
      # Prepare the pull request payload artifact. If this fails, we
      # we fail silently using the `continue-on-error` option. It's
      # nice if this succeeds, but if it fails for any reason, it
      # does not mean that our lint-test checks failed.
      - name: Prepare pull request payload artifact
        id: prepare-artifact
        if: always() && github.event_name == 'pull_request'
        continue-on-error: true
        run: cat $GITHUB_EVENT_PATH | jq '.pull_request' > pull_request_payload.json

      # This only makes sense if the previous step succeeded. To
      # get the original outcome of the previous step before the
      # `continue-on-error` conclusion is applied, we use the
      # `.outcome` value. This step also fails silently.
      - name: Upload a build artifact
        if: always() && steps.prepare-artifact.outcome == 'success'
        continue-on-error: true
        uses: actions/upload-artifact@v4
        with:
          name: pull-request-payload
          path: pull_request_payload.json
